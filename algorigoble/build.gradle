apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

version '1.2.0'

if (project.parent.name.equals("AlgorigoBleLibrary")) {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    group 'com.algorigo.algorigoble'

    publishing {
        publications {
            AlgorigoBle(MavenPublication) {
                artifact("$buildDir/outputs/aar/algorigoble-release.aar")
                groupId this.group
                artifactId 'AlgorigoBleLibrary'
                version this.version

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included in the pom.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = ['AlgorigoBle']
        configurations = ['archives']
        override = true
        pkg {
            repo = 'maven'
            name = 'AlgorigoBle'
            userOrg = 'chagilhwan'
            description = "Algorigo Ble Library with rx"
            publish = true
            publicDownloadNumbers = true
            licenses = ['Apache-2.0']
            websiteUrl = 'https://github.com/Algorigo/AlgorigoBleLibrary'
            vcsUrl = '${websiteUrl}.git'
            dryRun = false
            version {
                name = this.version
                desc = 'minor update'
                released = new Date()
                vcsTag = this.version
            }
        }
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName this.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.31'

    //RxAndroidBle
    implementation "com.polidea.rxandroidble2:rxandroidble:1.11.1"

    //ReactiveX
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //ReactiveX Relay
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'
}

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
}
