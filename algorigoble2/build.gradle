apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def versionStr = '2.3.3'

def getCurrentGitBranch() {
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (e) {
    }
    return gitBranch
}

def getUserName() {
    return System.properties['user.name']
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "com.algorigo.rx"
archivesBaseName = "algorigoble2"
if (getCurrentGitBranch().contains('master')) {
    version = versionStr
} else {
    version = "${versionStr}-${getUserName()}-SNAPSHOT"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            pom {
                name = 'AlgorigoBleLibrary'
                description = 'Ble Library for Android using ReactiveX'
                url = 'https://github.com/Algorigo/AlgorigoBleLibrary'
                artifact("$buildDir/outputs/aar/algorigoble2-release.aar")

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'rouddy'
                        name = 'Rouddy'
                        email = 'rouddy@naver.com'
                    }
                }

                scm {
                    connection = 'scm:https://github.com/Algorigo/AlgorigoBleLibrary.git'
                    developerConnection = 'scm:git:https://github.com/Algorigo/AlgorigoBleLibrary.git'
                    url = 'https://github.com/Algorigo/AlgorigoBleLibrary'
                }
            }
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? NEXUS_SNAPSHOT_REPOSITORY_URL : NEXUS_REPOSITORY_URL
            credentials {
                username = findProperty('nexusUsername')
                password = findProperty('nexusPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName versionStr

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    //ReactiveX
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //ReactiveX Relay
    implementation 'com.jakewharton.rxrelay3:rxrelay:3.0.1'

    // gson
    implementation 'com.google.code.gson:gson:2.8.9'
}
